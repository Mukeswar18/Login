<form action="SCALATEST" method="post"onsubmit="return validate()">
<h4>1.In Scala,what is the primary purpose of the "match"expression?</h4>
<input type="radio" name="option1" id="option1" value="A" required>To define a new variable.<br>
<input type="radio" name="option1" id="option2" value="B"  required>To iterate over a collection.<br>
<input type="radio" name="option1" id="option3" value="C"  required>To perform pattern matching<br>
<input type="radio" name="option1" id="option4" value="D" required>To declare a function.<br>


<h4>2.which keyword is used in Scala to declare a method that doesn't a returnvalue ?</h4> 
<input type="radio" name="option2" id="option5" value="A" required >void<br>
<input type="radio" name="option2" id="option6" value="B" required>def<br>
<input type="radio" name="option2" id="option7" value="C" required >return<br>
<input type="radio" name="option2" id="option8" value="D" required >Unit<br>


<h4>3. What is the primary benifit of using immutable collections in Scala ?</h4>
<input type="radio" name="option3" id="option9" value="A" required >They are faster for read operations<br>
<input type="radio" name="option3" id="option10" value="B" required >They allow for easy modifications of elements.<br>
<input type="radio" name="option3" id="option11" value="C" required>They consume less memory.<br>
<input type="radio" name="option3" id="option12" value="D" required >They provide thread safety.<br>


<h4>4. What does "@"symbol represent in Scala when used in pattern matching?</h4>
<input type="radio" name="option4" id="option13" value="A" required >Logical OR<br>
<input type="radio" name="option4" id="option14" value="B" required >Wildcard<br>
<input type="radio" name="option4" id="option15" value="C" required>Variable binding<br>
<input type="radio" name="option4" id="option16" value="D" required >Logical AND<br>


<h4>5.In Scala,what is the purpose of "trait" keyword</h4>
<input type="radio" name="option5" id="option17" value="A" required>To declare a class.<br>
<input type="radio" name="option5" id="option18" value="B" required>To declare a singleton object.<br>
<input type="radio" name="option5" id="option19" value="C" required >To define a functional interface<br>
<input type="radio" name="option5" id="option20" value="D" required >To define a mixin<br>


<h4>6.  Which collection type in Scala is best suited for implementing a Last-In-First-Out (LIFO) data structure?
?</h4><br>
<input type="radio" name="option6" id="option21" value="A" required > List
<br>
<input type="radio" name="option6" id="option22" value="B" required> Queue
<br>
<input type="radio" name="option6" id="option23" value="C" required>Stack
<br>
<input type="radio" name="option6" id="option24" value="D" required >Set
<br>




<h4>7. What is the output of the following code in Scala?
    css
Copy code
val x: Option[Int] = Some(5)
val y = x.getOrElse(10)
println(y)</h4>


<input type="radio" name="option7" id="option25" value="A" required >5<br>
<input type="radio" name="option7" id="option26" value="B" required>10<br>
<input type="radio" name="option7" id="option27" value="C" required>none<br>
<input type="radio" name="option7" id="option28" value="D" required >Error<br>


<h4>8.In Scala, what is the purpose of the "yield" keyword when used with a "for" comprehension?
</h4>
<input type="radio" name="option8" id="option29" value="A" required >To terminate the loop
<br>
<input type="radio" name="option8" id="option30" value="B" required >To specify the loop condition
<br>
<input type="radio" name="option8" id="option31" value="C" required>To indicate a generator
<br>
<input type="radio" name="option8" id="option32" value="D" required > To produce a new collection
<br>

<h4>9.What does the term "implicit" refer to in Scala?
    </h4>
<input type="radio" name="option9" id="option33" value="A" required>Implicit type conversion
<br>
<input type="radio" name="option9" id="option34" value="B" required> Implicit type declaration
<br>
<input type="radio" name="option9" id="option35" value="C" required >Implicit memory allocation
<br>
<input type="radio" name="option9" id="option36" value="D" required> Implicit type coercion
<br>

<h4>10.Which feature in Scala is used to avoid null references and promote safer code?
 </h4>
<input type="radio" name="option10" id="option37" value="A" required > Option and Some
<br>
<input type="radio" name="option10" id="option38" value="B" required>nullable and notNullable
<br>
<input type="radio" name="option10" id="option39" value="C" required>Maybe and Just
<br>
<input type="radio" name="option10" id="option40" value="D" required >Nullable and NonNullable
<br>


<input type="submit" value="Submit Quiz">
</form>